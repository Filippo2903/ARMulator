
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSERTION ASSERTIONDATA BYTEONLY CARET CLOSEBRACE CLOSEBRACKET COMMA COMMENT CONDITION CONST CONSTDEC CONSTDECWITHOUTSIZE ENDLINESPACES EQUALS EXCLAMATION HALFONLY INNERSHIFT LABEL LDMSTMMODE LISTINIT LISTREGS MEMPRIVILEGED MODIFYFLAGS OPBRANCH OPDATA2OP OPDATA3OP OPDATATEST OPENBRACE OPENBRACKET OPMEM OPMUL OPMULL OPMULTIPLEMEM OPNOP OPPSR OPSHIFT OPSVC OPSWP PSR RANGE REG SECTION SECTIONNAME SHARP SIGN SIGNEDBYTE SIGNEDHALF SPACEORTAB STARTSPACES VARDEC VARDECWITHOUTSIZEline : ENDLINESPACES\n            | COMMENT ENDLINESPACES\n            | linelabel ENDLINESPACES\n            | linelabelinstr ENDLINESPACES\n            | lineinstruction ENDLINESPACES\n            | sectiondeclaration ENDLINESPACES\n            | linedeclaration ENDLINESPACES\n            | lineassertion ENDLINESPACESline : CONST error ENDLINESPACESlinelabel : LABEL\n                 | LABEL SPACEORTAB COMMENTlinelabel : LABEL error COMMAsectiondeclaration : SECTION SECTIONNAME\n                          | SECTION SECTIONNAME SPACEORTAB COMMENTlineassertion : ASSERTION ASSERTIONDATA\n                     | ASSERTION ASSERTIONDATA SPACEORTAB COMMENTlinedeclaration : LABEL SPACEORTAB declarationconst\n                       | LABEL SPACEORTAB declarationconst SPACEORTAB COMMENT\n                       | LABEL SPACEORTAB declarationsize\n                       | LABEL SPACEORTAB declarationsize SPACEORTAB COMMENTlineinstruction : instruction\n                       | instruction SPACEORTAB COMMENTlinelabelinstr : LABEL SPACEORTAB instruction\n                      | LABEL SPACEORTAB instruction SPACEORTAB COMMENTinstruction : datainstruction\n                   | meminstruction\n                   | branchinstruction\n                   | multiplememinstruction\n                   | swapinstruction\n                   | shiftinstruction\n                   | psrinstruction\n                   | svcinstruction\n                   | multiplyinstruction\n                   | multiplylonginstruction\n                   | nopinstructiondatainstruction : datainst2op\n                       | datainst3op\n                       | datainsttestcondandspace : SPACEORTAB\n                    | CONDITION SPACEORTABflagscondandspace : CONDITION MODIFYFLAGS SPACEORTAB\n                         | CONDITION SPACEORTAB\n                         | MODIFYFLAGS SPACEORTAB\n                         | SPACEORTABaccessmodifiersandspace : SPACEORTAB\n                               | BYTEONLY SPACEORTAB\n                               | HALFONLY SPACEORTAB\n                               | SIGNEDBYTE SPACEORTAB\n                               | SIGNEDHALF SPACEORTAB\n                               | MEMPRIVILEGED SPACEORTAB\n                               | BYTEONLY MEMPRIVILEGED SPACEORTABdatainst2op : OPDATA2OP logmnemonic flagscondandspace REG COMMA op2datainst2op : OPDATA2OP logmnemonic flagscondandspace error COMMA op2\n                   | OPDATA2OP logmnemonic flagscondandspace REG error op2\n                   | OPDATA2OP logmnemonic flagscondandspace REG error COMMA op2datainst3op : OPDATA3OP logmnemonic flagscondandspace REG COMMA REG COMMA op2datainst3op : OPDATA3OP logmnemonic flagscondandspace REG error REG COMMA op2\n                   | OPDATA3OP logmnemonic flagscondandspace REG COMMA REG error op2\n                   | OPDATA3OP logmnemonic flagscondandspace REG COMMA REG\n                   | OPDATA3OP logmnemonic flagscondandspace REG error COMMA REG COMMA op2\n                   | OPDATA3OP logmnemonic flagscondandspace REG COMMA REG error COMMA op2datainsttest : OPDATATEST logmnemonic condandspace REG COMMA op2logmnemonic :op2 : REG\n           | SHARP CONST\n           | REG COMMA shiftop2 : REG shiftshift : shiftbyreg\n             | shiftbyvalueshiftbyreg : INNERSHIFT\n                  | INNERSHIFT SPACEORTAB REGshiftbyvalue : INNERSHIFT SHARP CONST\n                    | INNERSHIFT SPACEORTAB SHARP CONSTshiftinstruction : shiftinstrconst\n                        | shiftinstrreg\n                        | shiftinstrrrxshiftinstrrrx : OPSHIFT logmnemonic flagscondandspace REG COMMA REGshiftinstrconst : OPSHIFT logmnemonic flagscondandspace REG COMMA REG COMMA SHARP CONSTshiftinstrreg : OPSHIFT logmnemonic flagscondandspace REG COMMA REG COMMA REGmeminstruction : OPMEM logmnemonic accessmodifiersandspace REG COMMA memaccess\n                      | OPMEM logmnemonic CONDITION accessmodifiersandspace REG COMMA memaccessmemaccess : memaccesspre\n                 | memaccesspost\n                 | memaccesslabel\n                 | memaccesslabeladdr\n                 | memaccessimmediatememaccesspre : OPENBRACKET REG CLOSEBRACKET\n                    | OPENBRACKET REG COMMA signedoffsetreg memaccesspreclosing\n                    | OPENBRACKET REG COMMA SHARP CONST memaccesspreclosing\n                    | OPENBRACKET REG COMMA signedoffsetreg COMMA shiftnoreg memaccesspreclosingmemaccesspre : OPENBRACKET REG COMMA REG error memaccesspreclosingshiftnoreg : INNERSHIFT\n                  | INNERSHIFT SHARP CONST\n                  | INNERSHIFT SPACEORTAB SHARP CONSTsignedoffsetreg : REG\n                       | SIGN REGmemaccesspreclosing : CLOSEBRACKET\n                           | CLOSEBRACKET EXCLAMATIONmemaccesspost : OPENBRACKET REG CLOSEBRACKET COMMA signedoffsetreg\n                     | OPENBRACKET REG CLOSEBRACKET COMMA signedoffsetreg COMMA shiftnoreg\n                     | OPENBRACKET REG CLOSEBRACKET COMMA SHARP CONSTmemaccesslabel : LABELmemaccesslabeladdr : EQUALS LABELmemaccessimmediate : EQUALS CONSTswapinstruction : OPSWP logmnemonic SPACEORTAB REG COMMA REG COMMA OPENBRACKET REG CLOSEBRACKET\n                       | OPSWP logmnemonic BYTEONLY SPACEORTAB REG COMMA REG COMMA OPENBRACKET REG CLOSEBRACKET\n                       | OPSWP logmnemonic CONDITION SPACEORTAB REG COMMA REG COMMA OPENBRACKET REG CLOSEBRACKET\n                       | OPSWP logmnemonic CONDITION BYTEONLY SPACEORTAB REG COMMA REG COMMA OPENBRACKET REG CLOSEBRACKETbranchinstruction : OPBRANCH logmnemonic condandspace LABEL\n                         | OPBRANCH logmnemonic condandspace REGbranchinstruction : OPBRANCH logmnemonic condandspace CONST errormultiplememinstruction : stackinstruction\n                              | stmldminstructionlistregswithpsr : OPENBRACE LISTREGS CLOSEBRACE\n                       | OPENBRACE LISTREGS CLOSEBRACE CARETstackinstruction : OPMULTIPLEMEM logmnemonic condandspace listregswithpsrstmldmtargetreg : REG\n                       | REG EXCLAMATIONstmldmmodifier : SPACEORTAB\n                      | CONDITION SPACEORTAB\n                      | LDMSTMMODE SPACEORTAB\n                      | CONDITION LDMSTMMODE SPACEORTABstmldminstruction : OPMULTIPLEMEM logmnemonic stmldmmodifier stmldmtargetreg COMMA listregswithpsrpsrinstruction : OPPSR logmnemonic condandspace REG COMMA PSR\n                      | OPPSR logmnemonic condandspace PSR COMMA REG\n                      | OPPSR logmnemonic condandspace PSR COMMA SHARP CONSTsvcinstruction : OPSVC logmnemonic condandspace CONST\n                      | OPSVC logmnemonic condandspace SHARP CONSTmultiplyinstruction : OPMUL logmnemonic flagscondandspace REG COMMA REG COMMA REG\n                           | OPMUL logmnemonic flagscondandspace REG COMMA REG COMMA REG COMMA REG\n                           | OPMUL logmnemonic flagscondandspace REG COMMA REG COMMA SHARP CONSTmultiplylonginstruction : OPMULL logmnemonic flagscondandspace REG COMMA REG COMMA REG COMMA REG\n                               | OPMULL logmnemonic flagscondandspace REG COMMA REG  COMMA REG COMMA SHARP CONSTnopinstruction : OPNOP logmnemonic\n                      | OPNOP logmnemonic CONDITIONdeclarationconst : CONSTDEC LISTINITdeclarationconst : CONSTDECWITHOUTSIZE LISTINITdeclarationsize : VARDEC LISTINITdeclarationsize : VARDECWITHOUTSIZE LISTINIT'
    
_lr_action_items = {'ENDLINESPACES':([0,3,4,5,6,7,8,9,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,34,35,36,41,54,58,59,67,74,75,76,77,82,83,107,120,121,122,123,124,125,134,135,144,155,163,164,165,169,176,191,192,193,194,195,196,198,205,206,210,211,213,215,216,219,220,221,222,224,225,226,231,235,236,237,238,239,240,245,247,253,256,259,261,262,264,276,278,280,281,282,283,284,285,289,290,292,293,297,298,300,302,303,305,306,307,308,309,311,312,313,316,317,319,],[2,47,48,49,50,51,52,53,-10,-21,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-112,-113,-74,-75,-76,-63,73,-13,-15,-134,-11,-23,-17,-19,-12,-22,-135,-136,-137,-138,-139,-14,-16,-109,-110,-127,-116,-24,-18,-20,-111,-128,-80,-82,-83,-84,-85,-86,-102,-124,-125,-64,-52,-54,-53,-59,-62,-114,-123,-77,-103,-104,-81,-126,-67,-68,-69,-70,-65,-55,-115,-87,-129,-66,-56,-58,-57,-79,-131,-71,-72,-61,-60,-78,-95,-99,-88,-97,-96,-105,-130,-132,-73,-101,-91,-92,-98,-89,-106,-107,-133,-100,-90,-108,-93,-94,]),'COMMENT':([0,55,57,84,85,117,118,119,],[3,74,83,124,125,163,164,165,]),'CONST':([0,94,95,101,137,145,199,207,212,254,258,265,269,279,286,299,314,318,],[10,136,-39,144,-40,176,225,231,239,276,280,283,291,300,302,311,317,319,]),'LABEL':([0,94,95,137,166,199,200,],[11,134,-39,-40,198,224,198,]),'SECTION':([0,],[13,]),'ASSERTION':([0,],[14,]),'OPMEM':([0,55,],[29,29,]),'OPBRANCH':([0,55,],[30,30,]),'OPSWP':([0,55,],[33,33,]),'OPPSR':([0,55,],[37,37,]),'OPSVC':([0,55,],[38,38,]),'OPMUL':([0,55,],[39,39,]),'OPMULL':([0,55,],[40,40,]),'OPNOP':([0,55,],[41,41,]),'OPDATA2OP':([0,55,],[42,42,]),'OPDATA3OP':([0,55,],[43,43,]),'OPDATATEST':([0,55,],[44,44,]),'OPMULTIPLEMEM':([0,55,],[45,45,]),'OPSHIFT':([0,55,],[46,46,]),'$end':([1,2,47,48,49,50,51,52,53,73,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,]),'error':([10,11,105,108,136,148,149,151,153,178,216,267,],[54,56,-44,152,169,-42,-43,181,184,-41,242,287,]),'SPACEORTAB':([11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,77,87,89,90,91,92,93,96,98,99,103,104,107,114,115,120,121,122,123,129,134,135,141,144,147,155,160,169,176,191,192,193,194,195,196,198,205,206,210,211,213,215,216,219,220,221,222,224,225,226,231,235,236,237,238,239,240,245,247,253,256,259,261,262,264,276,278,280,281,282,283,284,285,289,290,292,293,297,298,300,302,303,305,306,307,308,309,311,312,313,316,317,319,],[55,57,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-63,-63,-112,-113,-63,-74,-75,-76,-63,-63,-63,-63,-63,-63,-63,-63,-63,-63,84,85,88,95,97,95,95,105,105,-134,105,105,95,113,105,117,118,119,88,128,130,131,132,133,137,139,140,148,149,-135,159,161,-136,-137,-138,-139,168,-109,-110,173,-127,178,-116,189,-111,-128,-80,-82,-83,-84,-85,-86,-102,-124,-125,-64,-52,-54,-53,-59,-62,-114,-123,-77,-103,-104,-81,-126,-67,-68,-69,257,-65,-55,-115,-87,-129,-66,-56,-58,-57,-79,-131,-71,-72,-61,-60,-78,-95,-99,-88,-97,-96,-105,-130,-132,-73,-101,-91,315,-98,-89,-106,-107,-133,-100,-90,-108,-93,-94,]),'SECTIONNAME':([13,],[58,]),'ASSERTIONDATA':([14,],[59,]),'CONDITION':([29,30,33,37,38,39,40,41,42,43,44,45,46,60,61,62,63,64,65,66,67,68,69,70,71,72,],[-63,-63,-63,-63,-63,-63,-63,-63,-63,-63,-63,-63,-63,87,96,99,96,96,103,103,107,103,103,96,114,103,]),'BYTEONLY':([29,33,60,62,87,99,],[-63,-63,89,98,89,141,]),'HALFONLY':([29,60,87,],[-63,90,90,]),'SIGNEDBYTE':([29,60,87,],[-63,91,91,]),'SIGNEDHALF':([29,60,87,],[-63,92,92,]),'MEMPRIVILEGED':([29,60,87,89,],[-63,93,93,129,]),'MODIFYFLAGS':([39,40,42,43,46,65,66,68,69,72,103,],[-63,-63,-63,-63,-63,104,104,104,104,104,147,]),'LDMSTMMODE':([45,71,114,],[-63,115,160,]),'CONSTDEC':([55,],[78,]),'CONSTDECWITHOUTSIZE':([55,],[79,]),'VARDEC':([55,],[80,]),'VARDECWITHOUTSIZE':([55,],[81,]),'COMMA':([56,126,138,142,143,146,150,151,152,153,154,157,158,162,167,171,172,181,184,188,201,204,208,209,210,216,217,222,223,228,229,242,244,247,252,253,255,267,268,284,285,292,],[82,166,170,174,175,177,179,180,182,183,185,187,-117,190,200,202,203,214,218,-118,227,230,232,233,234,241,243,246,248,250,251,260,263,266,274,275,277,-95,288,-95,301,-96,]),'LISTINIT':([78,79,80,81,],[120,121,122,123,]),'REG':([86,88,94,95,97,100,102,105,106,108,109,110,112,113,116,127,128,130,131,132,133,137,139,140,148,149,159,161,168,170,173,175,177,178,179,180,181,182,183,184,185,189,190,197,202,203,214,218,230,232,233,241,242,243,246,248,249,257,260,263,266,270,272,273,275,277,296,],[126,-45,135,-39,138,142,146,-44,150,151,153,154,158,-119,162,167,-46,-47,-48,-49,-50,-40,171,172,-42,-43,-120,-121,-51,201,204,206,208,-41,209,210,210,210,216,217,210,-122,222,223,228,229,210,244,252,253,255,210,210,210,264,267,271,278,210,210,284,292,294,295,297,298,310,]),'PSR':([95,100,137,174,],[-39,143,-40,205,]),'SHARP':([95,101,137,175,180,181,182,185,214,232,238,241,242,243,246,248,257,260,263,266,277,305,315,],[-39,145,-40,207,212,212,212,212,212,254,258,212,212,212,265,269,279,212,212,286,299,314,318,]),'OPENBRACE':([111,113,159,187,],[156,-39,-40,156,]),'LISTREGS':([156,],[186,]),'EXCLAMATION':([158,290,],[188,306,]),'OPENBRACKET':([166,200,227,250,251,274,],[197,197,249,272,273,296,]),'EQUALS':([166,200,],[199,199,]),'CLOSEBRACE':([186,],[220,]),'INNERSHIFT':([210,234,288,301,],[238,238,305,305,]),'CARET':([220,],[245,]),'CLOSEBRACKET':([223,267,268,271,287,291,292,294,295,304,305,310,317,319,],[247,-95,290,293,290,290,-96,308,309,290,-92,316,-93,-94,]),'SIGN':([248,266,],[270,270,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'line':([0,],[1,]),'linelabel':([0,],[4,]),'linelabelinstr':([0,],[5,]),'lineinstruction':([0,],[6,]),'sectiondeclaration':([0,],[7,]),'linedeclaration':([0,],[8,]),'lineassertion':([0,],[9,]),'instruction':([0,55,],[12,75,]),'datainstruction':([0,55,],[15,15,]),'meminstruction':([0,55,],[16,16,]),'branchinstruction':([0,55,],[17,17,]),'multiplememinstruction':([0,55,],[18,18,]),'swapinstruction':([0,55,],[19,19,]),'shiftinstruction':([0,55,],[20,20,]),'psrinstruction':([0,55,],[21,21,]),'svcinstruction':([0,55,],[22,22,]),'multiplyinstruction':([0,55,],[23,23,]),'multiplylonginstruction':([0,55,],[24,24,]),'nopinstruction':([0,55,],[25,25,]),'datainst2op':([0,55,],[26,26,]),'datainst3op':([0,55,],[27,27,]),'datainsttest':([0,55,],[28,28,]),'stackinstruction':([0,55,],[31,31,]),'stmldminstruction':([0,55,],[32,32,]),'shiftinstrconst':([0,55,],[34,34,]),'shiftinstrreg':([0,55,],[35,35,]),'shiftinstrrrx':([0,55,],[36,36,]),'logmnemonic':([29,30,33,37,38,39,40,41,42,43,44,45,46,],[60,61,62,63,64,65,66,67,68,69,70,71,72,]),'declarationconst':([55,],[76,]),'declarationsize':([55,],[77,]),'accessmodifiersandspace':([60,87,],[86,127,]),'condandspace':([61,63,64,70,71,],[94,100,101,110,111,]),'flagscondandspace':([65,66,68,69,72,],[102,106,108,109,116,]),'stmldmmodifier':([71,],[112,]),'listregswithpsr':([111,187,],[155,221,]),'stmldmtargetreg':([112,],[157,]),'memaccess':([166,200,],[191,226,]),'memaccesspre':([166,200,],[192,192,]),'memaccesspost':([166,200,],[193,193,]),'memaccesslabel':([166,200,],[194,194,]),'memaccesslabeladdr':([166,200,],[195,195,]),'memaccessimmediate':([166,200,],[196,196,]),'op2':([180,181,182,185,214,241,242,243,260,263,],[211,213,215,219,240,259,261,262,281,282,]),'shift':([210,234,],[235,256,]),'shiftbyreg':([210,234,],[236,236,]),'shiftbyvalue':([210,234,],[237,237,]),'signedoffsetreg':([248,266,],[268,285,]),'memaccesspreclosing':([268,287,291,304,],[289,303,307,313,]),'shiftnoreg':([288,301,],[304,312,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> line","S'",1,None,None,None),
  ('line -> ENDLINESPACES','line',1,'p_line','yaccparser.py',28),
  ('line -> COMMENT ENDLINESPACES','line',2,'p_line','yaccparser.py',29),
  ('line -> linelabel ENDLINESPACES','line',2,'p_line','yaccparser.py',30),
  ('line -> linelabelinstr ENDLINESPACES','line',2,'p_line','yaccparser.py',31),
  ('line -> lineinstruction ENDLINESPACES','line',2,'p_line','yaccparser.py',32),
  ('line -> sectiondeclaration ENDLINESPACES','line',2,'p_line','yaccparser.py',33),
  ('line -> linedeclaration ENDLINESPACES','line',2,'p_line','yaccparser.py',34),
  ('line -> lineassertion ENDLINESPACES','line',2,'p_line','yaccparser.py',35),
  ('line -> CONST error ENDLINESPACES','line',3,'p_line_error','yaccparser.py',39),
  ('linelabel -> LABEL','linelabel',1,'p_linelabel','yaccparser.py',43),
  ('linelabel -> LABEL SPACEORTAB COMMENT','linelabel',3,'p_linelabel','yaccparser.py',44),
  ('linelabel -> LABEL error COMMA','linelabel',3,'p_linelabel_error','yaccparser.py',48),
  ('sectiondeclaration -> SECTION SECTIONNAME','sectiondeclaration',2,'p_sectiondeclaration','yaccparser.py',53),
  ('sectiondeclaration -> SECTION SECTIONNAME SPACEORTAB COMMENT','sectiondeclaration',4,'p_sectiondeclaration','yaccparser.py',54),
  ('lineassertion -> ASSERTION ASSERTIONDATA','lineassertion',2,'p_lineassertion','yaccparser.py',58),
  ('lineassertion -> ASSERTION ASSERTIONDATA SPACEORTAB COMMENT','lineassertion',4,'p_lineassertion','yaccparser.py',59),
  ('linedeclaration -> LABEL SPACEORTAB declarationconst','linedeclaration',3,'p_linedeclaration','yaccparser.py',63),
  ('linedeclaration -> LABEL SPACEORTAB declarationconst SPACEORTAB COMMENT','linedeclaration',5,'p_linedeclaration','yaccparser.py',64),
  ('linedeclaration -> LABEL SPACEORTAB declarationsize','linedeclaration',3,'p_linedeclaration','yaccparser.py',65),
  ('linedeclaration -> LABEL SPACEORTAB declarationsize SPACEORTAB COMMENT','linedeclaration',5,'p_linedeclaration','yaccparser.py',66),
  ('lineinstruction -> instruction','lineinstruction',1,'p_lineinstruction','yaccparser.py',70),
  ('lineinstruction -> instruction SPACEORTAB COMMENT','lineinstruction',3,'p_lineinstruction','yaccparser.py',71),
  ('linelabelinstr -> LABEL SPACEORTAB instruction','linelabelinstr',3,'p_linelabelinstr','yaccparser.py',75),
  ('linelabelinstr -> LABEL SPACEORTAB instruction SPACEORTAB COMMENT','linelabelinstr',5,'p_linelabelinstr','yaccparser.py',76),
  ('instruction -> datainstruction','instruction',1,'p_instruction','yaccparser.py',80),
  ('instruction -> meminstruction','instruction',1,'p_instruction','yaccparser.py',81),
  ('instruction -> branchinstruction','instruction',1,'p_instruction','yaccparser.py',82),
  ('instruction -> multiplememinstruction','instruction',1,'p_instruction','yaccparser.py',83),
  ('instruction -> swapinstruction','instruction',1,'p_instruction','yaccparser.py',84),
  ('instruction -> shiftinstruction','instruction',1,'p_instruction','yaccparser.py',85),
  ('instruction -> psrinstruction','instruction',1,'p_instruction','yaccparser.py',86),
  ('instruction -> svcinstruction','instruction',1,'p_instruction','yaccparser.py',87),
  ('instruction -> multiplyinstruction','instruction',1,'p_instruction','yaccparser.py',88),
  ('instruction -> multiplylonginstruction','instruction',1,'p_instruction','yaccparser.py',89),
  ('instruction -> nopinstruction','instruction',1,'p_instruction','yaccparser.py',90),
  ('datainstruction -> datainst2op','datainstruction',1,'p_datainstruction','yaccparser.py',95),
  ('datainstruction -> datainst3op','datainstruction',1,'p_datainstruction','yaccparser.py',96),
  ('datainstruction -> datainsttest','datainstruction',1,'p_datainstruction','yaccparser.py',97),
  ('condandspace -> SPACEORTAB','condandspace',1,'p_condandspace','yaccparser.py',104),
  ('condandspace -> CONDITION SPACEORTAB','condandspace',2,'p_condandspace','yaccparser.py',105),
  ('flagscondandspace -> CONDITION MODIFYFLAGS SPACEORTAB','flagscondandspace',3,'p_flagscondandspace','yaccparser.py',110),
  ('flagscondandspace -> CONDITION SPACEORTAB','flagscondandspace',2,'p_flagscondandspace','yaccparser.py',111),
  ('flagscondandspace -> MODIFYFLAGS SPACEORTAB','flagscondandspace',2,'p_flagscondandspace','yaccparser.py',112),
  ('flagscondandspace -> SPACEORTAB','flagscondandspace',1,'p_flagscondandspace','yaccparser.py',113),
  ('accessmodifiersandspace -> SPACEORTAB','accessmodifiersandspace',1,'p_accessmodifiersandspace','yaccparser.py',120),
  ('accessmodifiersandspace -> BYTEONLY SPACEORTAB','accessmodifiersandspace',2,'p_accessmodifiersandspace','yaccparser.py',121),
  ('accessmodifiersandspace -> HALFONLY SPACEORTAB','accessmodifiersandspace',2,'p_accessmodifiersandspace','yaccparser.py',122),
  ('accessmodifiersandspace -> SIGNEDBYTE SPACEORTAB','accessmodifiersandspace',2,'p_accessmodifiersandspace','yaccparser.py',123),
  ('accessmodifiersandspace -> SIGNEDHALF SPACEORTAB','accessmodifiersandspace',2,'p_accessmodifiersandspace','yaccparser.py',124),
  ('accessmodifiersandspace -> MEMPRIVILEGED SPACEORTAB','accessmodifiersandspace',2,'p_accessmodifiersandspace','yaccparser.py',125),
  ('accessmodifiersandspace -> BYTEONLY MEMPRIVILEGED SPACEORTAB','accessmodifiersandspace',3,'p_accessmodifiersandspace','yaccparser.py',126),
  ('datainst2op -> OPDATA2OP logmnemonic flagscondandspace REG COMMA op2','datainst2op',6,'p_datainst2op','yaccparser.py',145),
  ('datainst2op -> OPDATA2OP logmnemonic flagscondandspace error COMMA op2','datainst2op',6,'p_datainst2op_error','yaccparser.py',160),
  ('datainst2op -> OPDATA2OP logmnemonic flagscondandspace REG error op2','datainst2op',6,'p_datainst2op_error','yaccparser.py',161),
  ('datainst2op -> OPDATA2OP logmnemonic flagscondandspace REG error COMMA op2','datainst2op',7,'p_datainst2op_error','yaccparser.py',162),
  ('datainst3op -> OPDATA3OP logmnemonic flagscondandspace REG COMMA REG COMMA op2','datainst3op',8,'p_datainst3op','yaccparser.py',172),
  ('datainst3op -> OPDATA3OP logmnemonic flagscondandspace REG error REG COMMA op2','datainst3op',8,'p_datainst3op_error','yaccparser.py',189),
  ('datainst3op -> OPDATA3OP logmnemonic flagscondandspace REG COMMA REG error op2','datainst3op',8,'p_datainst3op_error','yaccparser.py',190),
  ('datainst3op -> OPDATA3OP logmnemonic flagscondandspace REG COMMA REG','datainst3op',6,'p_datainst3op_error','yaccparser.py',191),
  ('datainst3op -> OPDATA3OP logmnemonic flagscondandspace REG error COMMA REG COMMA op2','datainst3op',9,'p_datainst3op_error','yaccparser.py',192),
  ('datainst3op -> OPDATA3OP logmnemonic flagscondandspace REG COMMA REG error COMMA op2','datainst3op',9,'p_datainst3op_error','yaccparser.py',193),
  ('datainsttest -> OPDATATEST logmnemonic condandspace REG COMMA op2','datainsttest',6,'p_datainsttest','yaccparser.py',208),
  ('logmnemonic -> <empty>','logmnemonic',0,'p_logmnemonic','yaccparser.py',225),
  ('op2 -> REG','op2',1,'p_op2','yaccparser.py',231),
  ('op2 -> SHARP CONST','op2',2,'p_op2','yaccparser.py',232),
  ('op2 -> REG COMMA shift','op2',3,'p_op2','yaccparser.py',233),
  ('op2 -> REG shift','op2',2,'p_op2_error','yaccparser.py',268),
  ('shift -> shiftbyreg','shift',1,'p_shift','yaccparser.py',276),
  ('shift -> shiftbyvalue','shift',1,'p_shift','yaccparser.py',277),
  ('shiftbyreg -> INNERSHIFT','shiftbyreg',1,'p_shiftbyreg','yaccparser.py',282),
  ('shiftbyreg -> INNERSHIFT SPACEORTAB REG','shiftbyreg',3,'p_shiftbyreg','yaccparser.py',283),
  ('shiftbyvalue -> INNERSHIFT SHARP CONST','shiftbyvalue',3,'p_shiftbyvalue','yaccparser.py',298),
  ('shiftbyvalue -> INNERSHIFT SPACEORTAB SHARP CONST','shiftbyvalue',4,'p_shiftbyvalue','yaccparser.py',299),
  ('shiftinstruction -> shiftinstrconst','shiftinstruction',1,'p_shiftinstruction','yaccparser.py',321),
  ('shiftinstruction -> shiftinstrreg','shiftinstruction',1,'p_shiftinstruction','yaccparser.py',322),
  ('shiftinstruction -> shiftinstrrrx','shiftinstruction',1,'p_shiftinstruction','yaccparser.py',323),
  ('shiftinstrrrx -> OPSHIFT logmnemonic flagscondandspace REG COMMA REG','shiftinstrrrx',6,'p_shiftinstrrrx','yaccparser.py',334),
  ('shiftinstrconst -> OPSHIFT logmnemonic flagscondandspace REG COMMA REG COMMA SHARP CONST','shiftinstrconst',9,'p_shiftinstrconst','yaccparser.py',347),
  ('shiftinstrreg -> OPSHIFT logmnemonic flagscondandspace REG COMMA REG COMMA REG','shiftinstrreg',8,'p_shiftinstrreg','yaccparser.py',367),
  ('meminstruction -> OPMEM logmnemonic accessmodifiersandspace REG COMMA memaccess','meminstruction',6,'p_meminstruction','yaccparser.py',383),
  ('meminstruction -> OPMEM logmnemonic CONDITION accessmodifiersandspace REG COMMA memaccess','meminstruction',7,'p_meminstruction','yaccparser.py',384),
  ('memaccess -> memaccesspre','memaccess',1,'p_memaccess','yaccparser.py',448),
  ('memaccess -> memaccesspost','memaccess',1,'p_memaccess','yaccparser.py',449),
  ('memaccess -> memaccesslabel','memaccess',1,'p_memaccess','yaccparser.py',450),
  ('memaccess -> memaccesslabeladdr','memaccess',1,'p_memaccess','yaccparser.py',451),
  ('memaccess -> memaccessimmediate','memaccess',1,'p_memaccess','yaccparser.py',452),
  ('memaccesspre -> OPENBRACKET REG CLOSEBRACKET','memaccesspre',3,'p_memaccesspre','yaccparser.py',457),
  ('memaccesspre -> OPENBRACKET REG COMMA signedoffsetreg memaccesspreclosing','memaccesspre',5,'p_memaccesspre','yaccparser.py',458),
  ('memaccesspre -> OPENBRACKET REG COMMA SHARP CONST memaccesspreclosing','memaccesspre',6,'p_memaccesspre','yaccparser.py',459),
  ('memaccesspre -> OPENBRACKET REG COMMA signedoffsetreg COMMA shiftnoreg memaccesspreclosing','memaccesspre',7,'p_memaccesspre','yaccparser.py',460),
  ('memaccesspre -> OPENBRACKET REG COMMA REG error memaccesspreclosing','memaccesspre',6,'p_memaccesspre_error','yaccparser.py',487),
  ('shiftnoreg -> INNERSHIFT','shiftnoreg',1,'p_shiftnoreg','yaccparser.py',491),
  ('shiftnoreg -> INNERSHIFT SHARP CONST','shiftnoreg',3,'p_shiftnoreg','yaccparser.py',492),
  ('shiftnoreg -> INNERSHIFT SPACEORTAB SHARP CONST','shiftnoreg',4,'p_shiftnoreg','yaccparser.py',493),
  ('signedoffsetreg -> REG','signedoffsetreg',1,'p_signedoffsetreg','yaccparser.py',505),
  ('signedoffsetreg -> SIGN REG','signedoffsetreg',2,'p_signedoffsetreg','yaccparser.py',506),
  ('memaccesspreclosing -> CLOSEBRACKET','memaccesspreclosing',1,'p_memaccesspreclosing','yaccparser.py',516),
  ('memaccesspreclosing -> CLOSEBRACKET EXCLAMATION','memaccesspreclosing',2,'p_memaccesspreclosing','yaccparser.py',517),
  ('memaccesspost -> OPENBRACKET REG CLOSEBRACKET COMMA signedoffsetreg','memaccesspost',5,'p_memaccesspost','yaccparser.py',523),
  ('memaccesspost -> OPENBRACKET REG CLOSEBRACKET COMMA signedoffsetreg COMMA shiftnoreg','memaccesspost',7,'p_memaccesspost','yaccparser.py',524),
  ('memaccesspost -> OPENBRACKET REG CLOSEBRACKET COMMA SHARP CONST','memaccesspost',6,'p_memaccesspost','yaccparser.py',525),
  ('memaccesslabel -> LABEL','memaccesslabel',1,'p_memaccesslabel','yaccparser.py',549),
  ('memaccesslabeladdr -> EQUALS LABEL','memaccesslabeladdr',2,'p_memaccesslabeladdr','yaccparser.py',557),
  ('memaccessimmediate -> EQUALS CONST','memaccessimmediate',2,'p_memaccessimmediate','yaccparser.py',565),
  ('swapinstruction -> OPSWP logmnemonic SPACEORTAB REG COMMA REG COMMA OPENBRACKET REG CLOSEBRACKET','swapinstruction',10,'p_swapinstruction','yaccparser.py',574),
  ('swapinstruction -> OPSWP logmnemonic BYTEONLY SPACEORTAB REG COMMA REG COMMA OPENBRACKET REG CLOSEBRACKET','swapinstruction',11,'p_swapinstruction','yaccparser.py',575),
  ('swapinstruction -> OPSWP logmnemonic CONDITION SPACEORTAB REG COMMA REG COMMA OPENBRACKET REG CLOSEBRACKET','swapinstruction',11,'p_swapinstruction','yaccparser.py',576),
  ('swapinstruction -> OPSWP logmnemonic CONDITION BYTEONLY SPACEORTAB REG COMMA REG COMMA OPENBRACKET REG CLOSEBRACKET','swapinstruction',12,'p_swapinstruction','yaccparser.py',577),
  ('branchinstruction -> OPBRANCH logmnemonic condandspace LABEL','branchinstruction',4,'p_branchinstruction','yaccparser.py',603),
  ('branchinstruction -> OPBRANCH logmnemonic condandspace REG','branchinstruction',4,'p_branchinstruction','yaccparser.py',604),
  ('branchinstruction -> OPBRANCH logmnemonic condandspace CONST error','branchinstruction',5,'p_branchinstruction_error','yaccparser.py',630),
  ('multiplememinstruction -> stackinstruction','multiplememinstruction',1,'p_multiplememinstruction','yaccparser.py',635),
  ('multiplememinstruction -> stmldminstruction','multiplememinstruction',1,'p_multiplememinstruction','yaccparser.py',636),
  ('listregswithpsr -> OPENBRACE LISTREGS CLOSEBRACE','listregswithpsr',3,'p_listregswithpsr','yaccparser.py',642),
  ('listregswithpsr -> OPENBRACE LISTREGS CLOSEBRACE CARET','listregswithpsr',4,'p_listregswithpsr','yaccparser.py',643),
  ('stackinstruction -> OPMULTIPLEMEM logmnemonic condandspace listregswithpsr','stackinstruction',4,'p_stackinstruction','yaccparser.py',660),
  ('stmldmtargetreg -> REG','stmldmtargetreg',1,'p_stmldmtargetreg','yaccparser.py',687),
  ('stmldmtargetreg -> REG EXCLAMATION','stmldmtargetreg',2,'p_stmldmtargetreg','yaccparser.py',688),
  ('stmldmmodifier -> SPACEORTAB','stmldmmodifier',1,'p_stmldmmodifier','yaccparser.py',697),
  ('stmldmmodifier -> CONDITION SPACEORTAB','stmldmmodifier',2,'p_stmldmmodifier','yaccparser.py',698),
  ('stmldmmodifier -> LDMSTMMODE SPACEORTAB','stmldmmodifier',2,'p_stmldmmodifier','yaccparser.py',699),
  ('stmldmmodifier -> CONDITION LDMSTMMODE SPACEORTAB','stmldmmodifier',3,'p_stmldmmodifier','yaccparser.py',700),
  ('stmldminstruction -> OPMULTIPLEMEM logmnemonic stmldmmodifier stmldmtargetreg COMMA listregswithpsr','stmldminstruction',6,'p_stmldminstruction','yaccparser.py',721),
  ('psrinstruction -> OPPSR logmnemonic condandspace REG COMMA PSR','psrinstruction',6,'p_psrinstruction','yaccparser.py',737),
  ('psrinstruction -> OPPSR logmnemonic condandspace PSR COMMA REG','psrinstruction',6,'p_psrinstruction','yaccparser.py',738),
  ('psrinstruction -> OPPSR logmnemonic condandspace PSR COMMA SHARP CONST','psrinstruction',7,'p_psrinstruction','yaccparser.py',739),
  ('svcinstruction -> OPSVC logmnemonic condandspace CONST','svcinstruction',4,'p_svcinstruction','yaccparser.py',785),
  ('svcinstruction -> OPSVC logmnemonic condandspace SHARP CONST','svcinstruction',5,'p_svcinstruction','yaccparser.py',786),
  ('multiplyinstruction -> OPMUL logmnemonic flagscondandspace REG COMMA REG COMMA REG','multiplyinstruction',8,'p_multiplyinstruction','yaccparser.py',800),
  ('multiplyinstruction -> OPMUL logmnemonic flagscondandspace REG COMMA REG COMMA REG COMMA REG','multiplyinstruction',10,'p_multiplyinstruction','yaccparser.py',801),
  ('multiplyinstruction -> OPMUL logmnemonic flagscondandspace REG COMMA REG COMMA SHARP CONST','multiplyinstruction',9,'p_multiplyinstruction','yaccparser.py',802),
  ('multiplylonginstruction -> OPMULL logmnemonic flagscondandspace REG COMMA REG COMMA REG COMMA REG','multiplylonginstruction',10,'p_multiplylonginstruction','yaccparser.py',830),
  ('multiplylonginstruction -> OPMULL logmnemonic flagscondandspace REG COMMA REG COMMA REG COMMA SHARP CONST','multiplylonginstruction',11,'p_multiplylonginstruction','yaccparser.py',831),
  ('nopinstruction -> OPNOP logmnemonic','nopinstruction',2,'p_nopinstruction','yaccparser.py',869),
  ('nopinstruction -> OPNOP logmnemonic CONDITION','nopinstruction',3,'p_nopinstruction','yaccparser.py',870),
  ('declarationconst -> CONSTDEC LISTINIT','declarationconst',2,'p_declarationconst','yaccparser.py',881),
  ('declarationconst -> CONSTDECWITHOUTSIZE LISTINIT','declarationconst',2,'p_declarationconst_error','yaccparser.py',889),
  ('declarationsize -> VARDEC LISTINIT','declarationsize',2,'p_declarationsize','yaccparser.py',893),
  ('declarationsize -> VARDECWITHOUTSIZE LISTINIT','declarationsize',2,'p_declarationsize_error','yaccparser.py',906),
]
